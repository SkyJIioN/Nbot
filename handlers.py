# handlers.py
import logging
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
from services.market_data import get_crypto_prices
from services.groq_client import ask_groq

logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ /analyze, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫—É üß†")

async def analyze(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    await message.reply_text("‚è≥ –û—á—ñ–∫—É—é –¥–∞–Ω—ñ...")

    prices = get_crypto_prices()
    logger.info(f"[DEBUG] Prices: {prices}")

    if not prices or not prices.get("bitcoin") or not prices.get("ethereum"):
        await message.reply_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.")
        return

    btc = prices["bitcoin"]
    eth = prices["ethereum"]

    prompt = (
        f"–ó–∞—Ä–∞–∑ —Ü—ñ–Ω–∏:
BTC: {btc}$
ETH: {eth}$\n"
        f"–ß–∏ –≤–∞—Ä—Ç–æ –≤—Ö–æ–¥–∏—Ç–∏ –≤ –ø–æ–∑–∏—Ü—ñ—é? –ê–Ω–∞–ª—ñ–∑—É–π 1H –≥—Ä–∞—Ñ—ñ–∫. "
        f"–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –∫–æ—Ä–æ—Ç–∫–æ, –¥–æ 3 —Ä–µ—á–µ–Ω—å, –∑ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º –æ–±“ë—Ä—É–Ω—Ç—É–≤–∞–Ω–Ω—è–º."
    )

    answer = ask_groq(prompt)
    logger.info(f"[DEBUG] Answer from Groq: {answer}")

    await message.reply_text(f"üìä –ê–Ω–∞–ª—ñ–∑:
{answer}")

def setup_handlers(application):
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("analyze", analyze))
