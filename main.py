import os
from fastapi import FastAPI
from telegram.ext import Application, CommandHandler
from webhook import webhook_router
from handlers.scan import scan_command
from dotenv import load_dotenv

load_dotenv()  # —á–∏—Ç–∞—î .env, –Ω–µ –∑–∞–≤–∞–∂–∞—î —è–∫—â–æ –∑–∞–ø—É—Å–∫–∞—î—à –ª–æ–∫–∞–ª—å–Ω–æ

# –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω —ñ–∑ –∑–º—ñ–Ω–Ω–æ—ó —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —É Render.")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram Application
app_telegram = Application.builder().token(BOT_TOKEN).build()

# FastAPI –¥–æ–¥–∞—Ç–æ–∫
app = FastAPI()

@app.on_event("startup")
async def on_startup():
    # –î–æ–¥–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏
    app_telegram.add_handler(CommandHandler("scan", scan_command))

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram Webhook
    await app_telegram.initialize()
    print("‚úÖ Telegram Application initialized")

# –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ webhook –º–∞—Ä—à—Ä—É—Ç
app.include_router(webhook_router)

@app.get("/")
async def root():
    return {"message": "ü§ñ Bot is running!"}