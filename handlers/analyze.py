### üìÅ handlers/analyze.py

from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from services.market_data import get_price
from services.groq_client import ask_groq

SUPPORTED_SYMBOLS = ["BTC", "ETH", "SOL", "BNB", "DOGE"]

async def analyze_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton(symbol, callback_data=f"analyze:{symbol}")]
                for symbol in SUPPORTED_SYMBOLS]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É:", reply_markup=reply_markup)


async def analyze_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    _, symbol = query.data.split(":")
    price = get_price(symbol)

    if price == 0.0:
        await query.edit_message_text(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É –¥–ª—è {symbol}.")
        return

    prompt = f"–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π {symbol} –∑ –ø–æ—Ç–æ—á–Ω–æ—é —Ü—ñ–Ω–æ—é {price:.2f} USD. –Ø–∫—ñ –º–æ–∂–ª–∏–≤—ñ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥—É/–≤–∏—Ö–æ–¥—É? –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é."
    response = ask_groq(prompt)

    if not response:
        await query.edit_message_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Groq.")
    else:
        await query.edit_message_text(f"{symbol} ({price:.2f} USD):\n{response}")
