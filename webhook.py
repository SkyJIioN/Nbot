from telegram import Update
from telegram.ext import ContextTypes
from services.market_data import get_crypto_prices
from services.groq_client import ask_groq

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ /analyze –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –∫—Ä–∏–ø—Ç–æ—Ä–∏–Ω–∫—É.")

async def analyze(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚è≥ –û—á—ñ–∫—É—é –¥–∞–Ω—ñ...")

    prices = get_crypto_prices()
    if not prices:
        await update.message.reply_text("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–∏–Ω–∫–æ–≤—ñ –¥–∞–Ω—ñ.")
        return

    btc = prices.get("bitcoin", "–Ω/–¥")
    eth = prices.get("ethereum", "–Ω/–¥")

    prompt = (
        f"–¶—ñ–Ω–∞ BTC/USDT: {btc}$, ETH/USDT: {eth}$.\n"
        "–ß–∏ –≤–∞—Ä—Ç–æ –≤—Ö–æ–¥–∏—Ç–∏ –≤ –ø–æ–∑–∏—Ü—ñ—é –∑–∞—Ä–∞–∑ –Ω–∞ 1H –≥—Ä–∞—Ñ—ñ–∫—É?\n"
        "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —Ç–µ—Ö–Ω—ñ—á–Ω–æ."
    )

    result = ask_groq(prompt)
    await update.message.reply_text(f"üìä –í—ñ–¥–ø–æ–≤—ñ–¥—å –®–Ü:\n{result}")