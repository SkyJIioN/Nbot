import os
import requests
import json

GROQ_API_KEY = os.getenv("GROQ_API_KEY")

def build_prompt(symbol, timeframe, rsi, sma, ema, macd, macd_signal,
                 bb_upper, bb_lower, trend, support, resistance):
    return f"""
üîç –ê–Ω–∞–ª—ñ–∑ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ {symbol} –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ñ {timeframe.upper()} –∑ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏:
- –ü–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–Ω–¥: {trend}
- –õ—ñ–Ω—ñ—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏: {support:.2f}$
- –õ—ñ–Ω—ñ—è –æ–ø–æ—Ä—É: {resistance:.2f}$
- RSI: {rsi:.2f}
- SMA: {sma:.2f}
- EMA: {ema:.2f}
- MACD: {macd:.2f}
- MACD Signal: {macd_signal:.2f}
- Bollinger Bands: –í–µ—Ä—Ö–Ω—è {bb_upper:.2f}, –ù–∏–∂–Ω—è {bb_lower:.2f}

–ù–∞ –æ—Å–Ω–æ–≤—ñ —Ü–∏—Ö –¥–∞–Ω–∏—Ö:
1. –û–ø–∏—à–∏ —Å—Ç–∞–Ω —Ä–∏–Ω–∫—É (–ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω—ñ—Å—Ç—å, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ñ—Å—Ç—å, –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω—ñ—Å—Ç—å).
2. –ó—Ä–æ–±–∏ –ª–∞–∫–æ–Ω—ñ—á–Ω—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é: LONG, SHORT –∞–±–æ –û—á—ñ–∫—É–≤–∞—Ç–∏.
3. –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π:
   - –¢–æ—á–∫—É –≤—Ö–æ–¥—É
   - –¢–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç
   - –°—Ç–æ–ø-–ª–æ—Å—Å
   - –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å (–≤ –≥–æ–¥–∏–Ω–∞—Ö)
   - –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–µ –∫—Ä–µ–¥–∏—Ç–Ω–µ –ø–ª–µ—á–µ

–í—ñ–¥–ø–æ–≤—ñ–¥—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ —É —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ:
- –ü–æ–∑–∏—Ü—ñ—è: LONG/SHORT
- –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É: 
- –¢–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç:
- –°—Ç–æ–ø-–ª–æ—Å—Å:
- –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å:
- –ö—Ä–µ–¥–∏—Ç–Ω–µ –ø–ª–µ—á–µ:
- –û–ø–∏—Å —Ä–∏–Ω–∫–æ–≤–æ—ó —Å–∏—Ç—É–∞—Ü—ñ—ó:
"""

async def generate_signal_description(symbol, timeframe, rsi, sma, ema, macd, macd_signal,
                                      bb_upper, bb_lower, trend, support, resistance):
    url = "https://api.groq.com/openai/v1/chat/completions"

    headers = {
        "Authorization": f"Bearer {GROQ_API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
        "model": "llama3-70b-8192",
        "messages": [
            {
                "role": "system",
                "content": "–¢–∏ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π –∫—Ä–∏–ø—Ç–æ-—Ç—Ä–µ–π–¥–µ—Ä. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —á—ñ—Ç–∫–æ, —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, –±–µ–∑ –∑–∞–π–≤–∏—Ö –¥–µ—Ç–∞–ª–µ–π."
            },
            {
                "role": "user",
                "content": build_prompt(symbol, timeframe, rsi, sma, ema, macd, macd_signal,
                                        bb_upper, bb_lower, trend, support, resistance)
            }
        ],
        "temperature": 0.4
    }

    try:
        response = requests.post(url, headers=headers, data=json.dumps(payload), timeout=15)
        response.raise_for_status()
        data = response.json()
        return data["choices"][0]["message"]["content"].strip()
    except Exception as e:
        return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥ Groq: {e}"